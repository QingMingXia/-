public class HttpServletWrapper extends HttpServletRequestWrapper{
      public HttpServletWrapper(HttpServletRequest request) {
        super(request);
    }

    public HttpServletWrapper(HttpServletRequest request, Map<String, String> xssMap) {
        super(request);
        this.xssMap = xssMap;
    }

    @Override
    public String[] getParameterValues(String parameter) {
        String[] values = super.getParameterValues(parameter);
        if (values == null) {
            return null;
        }
        int count = values.length;
        // 遍历每一个参数，检查是否含有
        String[] encodedValues = new String[count];
        for (int i = 0; i < count; i++) {
            encodedValues[i] = cleanXSS(values[i]);
        }
        return encodedValues;
    }

    @Override
    public String getParameter(String parameter) {
        String value = super.getParameter(parameter);
        return value == null ? null : cleanXSS(value);
    }

    public String getHeader(String name) {
        String value = super.getHeader(name);
        return value == null ? null : cleanXSS(value);
    }

    /**
     * 清除恶意的XSS脚本
     *
     * @param value
     * @return
     */
    private String cleanXSS(String value) {
        String val = value;
        Set<Map.Entry<String, String>> xssSet = xssMap.entrySet();
        for (Map.Entry<String, String> entry : xssSet) {
            val = val.replaceAll(entry.getKey(), entry.getValue());
        }
        return val == null ? null : val.trim() ;
    }






}
